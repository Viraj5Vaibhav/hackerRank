The distance between two array values is the number of indices between them. Given , find the minimum distance between any pair of equal elements in the array. If no such value exists, return .

Example

There are two matching pairs of values:  and . The indices of the 's are  and , so their distance is . The indices of the 's are  and , so their distance is . The minimum distance is .

Function Description

Complete the minimumDistances function in the editor below.

minimumDistances has the following parameter(s):

int a[n]: an array of integers
Returns

int: the minimum distance found or  if there are no matching elements
Input Format

The first line contains an integer , the size of array .
The second line contains  space-separated integers .

Constraints

Output Format

Print a single integer denoting the minimum  in . If no such value exists, print .

Solution:

unction minimumDistances(a) {
    var minDistanceArr = [];
    var min;
    for(var i=0;i<a.length;i++){
        var searchIndex = a.indexOf(a[i],i+1);
        if(searchIndex!=-1)
            minDistanceArr.push(searchIndex-i);
    }
    console.log(JSON.stringify(minDistanceArr));
    min = minDistanceArr.length>0?minDistanceArr[0]:-1;
    for(var i=1;i<minDistanceArr.length;i++)
    {
        if(min>minDistanceArr[i])
            min = minDistanceArr[i];
    }
    return min;;
}
