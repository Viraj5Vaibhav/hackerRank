import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the formingMagicSquare function below.
    static int formingMagicSquare(int[][] s) {
        int[][][] perfect = {{{8, 1, 6}, {3, 5, 7}, {4, 9, 2}},
                            {{6, 1, 8}, {7, 5, 3}, {2, 9, 4}},
                            {{4, 9, 2}, {3, 5, 7}, {8, 1, 6}},
                            {{2, 9, 4}, {7, 5, 3}, {6, 1, 8}}, 
                            {{8, 3, 4}, {1, 5, 9}, {6, 7, 2}},
                            {{4, 3, 8}, {9, 5, 1}, {2, 7, 6}}, 
                            {{6, 7, 2}, {1, 5, 9}, {8, 3, 4}}, 
                            {{2, 7, 6}, {9, 5, 1}, {4, 3, 8}}};
        int cost=0;
        int[] cost8 = new int[8];
        for(int k=0;k<8;k++){
            System.out.println("Loop Array : " + k);
            for(int i=0;i<s.length;i++){
                for(int j=0;j<s[i].length;j++){
                    cost += Math.abs(perfect[k][i][j]-s[i][j]);
                    System.out.println("i : "+i + " j : "+j + " cost : "+cost);
                }
            }
            cost8[k] = cost;
            cost = 0;
        }
        cost=cost8[0];
        for(int i=1;i<8;i++){
            if(cost>cost8[i])
                cost = cost8[i];
        }
        return cost;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int[][] s = new int[3][3];

        for (int i = 0; i < 3; i++) {
            String[] sRowItems = scanner.nextLine().split(" ");
            scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

            for (int j = 0; j < 3; j++) {
                int sItem = Integer.parseInt(sRowItems[j]);
                s[i][j] = sItem;
            }
        }

        int result = formingMagicSquare(s);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
