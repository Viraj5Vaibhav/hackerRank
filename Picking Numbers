import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'pickingNumbers' function below.
     *
     * The function is expected to return an INTEGER.
     * The function accepts INTEGER_ARRAY a as parameter.
     */

    public static int pickingNumbers(List<Integer> a) {
        ArrayList<String> NumberSet = new ArrayList<String>();
        ArrayList<Integer> SpaceSet = new ArrayList<Integer>();
        int count = 0, index = 0, space =0;
        Collections.sort(a);
        for(int i:a)
            System.out.print(i+" ");
        for(int i = 0;i<a.size();i++){
            count = 0;
            NumberSet.add(a.get(i).toString());
            for(int j = i+1; j<a.size();j++){
                if(a.get(j)-a.get(i)<=1){
                    NumberSet.set(i, NumberSet.get(i)+" "+a.get(j).toString());
                    count++;
                }
            }
            SpaceSet.add(count);
        }
        //count = NumberSet.get(index).replaceAll(" ","").length();
        return Collections.max(SpaceSet)+1;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = Integer.parseInt(bufferedReader.readLine().trim());

        List<Integer> a = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(toList());

        int result = Result.pickingNumbers(a);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
