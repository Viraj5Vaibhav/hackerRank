import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the cutTheSticks function below.
    static int[] cutTheSticks(int[] arr) {
        int shortest = arr[0], count=0, newCount = 0;
        int[] result = new int[arr.length];
        
        for(int k=0;k<arr.length;k++){
            for(int i=0;i<arr.length;i++){
                if(((shortest>arr[i] || shortest == 0) && arr[i]!=0))
                    shortest = arr[i];
            }
            for(int j=0;j<arr.length;j++){
                
                if(arr[j]-shortest>=0 && arr[j]!=0)
                {
                    arr[j]-=shortest;
                    count++;
                }
            }
            if(count!=0){
                result[k] = count;
                newCount++;
            }
            count = 0;
            shortest = 0;
        }
       
        int[] results = new int[newCount];
         for(int j=0;j<newCount;j++){
                results[j] = result[j];
        }
        return results;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = cutTheSticks(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
  
